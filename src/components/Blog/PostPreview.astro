---
import { type CollectionEntry } from 'astro:content';
import FormattedDate from './FormattedDate.astro';

type Props = { post: CollectionEntry<'blog'>; class?: string; headingLevel?: 'h2' | 'h3' };

const { post, class: className, headingLevel = 'h3' } = Astro.props;
const { title, publishDate, updatedDate } = post.data;

function getFirstParagraphFromMarkdown(markdown: string) {
  if (!markdown) return '';
  const noImports = markdown.replace(/^\s*(import|export)[^\n]*\n/gm, '');
  const firstBlock = noImports.trim().split(/\n\s*\n/)[0] || '';
  const withoutImages = firstBlock.replace(/!\[[^\]]*\]\([^)]*\)/g, '');
  const withoutLinks = withoutImages.replace(/\[([^\]]+)\]\([^)]*\)/g, '$1');
  const withoutFormatting = withoutLinks.replace(/[\\*_`~>]/g, '');
  return withoutFormatting.trim();
}
const firstParagraph = getFirstParagraphFromMarkdown(post.body);
const TitleTag = headingLevel;
---

<div class:list={["PostPreview flex justify-between items-start gap-8", className]}>
  <div class="grow">
    <TitleTag class="text-xl leading-tight font-serif font-medium sm:text-2xl">
      <a href={`/blog/${post.slug}/`}>{title}</a>
    </TitleTag>
    {firstParagraph && <div class="mt-3 text-sm leading-normal">{firstParagraph}</div>}
    <div class="PostPreview__Date mt-3 text-sm leading-normal">
      <FormattedDate date={publishDate} />
      {
        updatedDate && (
          <>
            {' '}
            <span>
              (Updated on <FormattedDate date={updatedDate} />)
            </span>
          </>
        )
      }
    </div>
  </div>
</div>

<style lang="scss">
  .PostPreview {
    max-width: 64ch;
    &__Date {
      color: var(--color-text-secondary);
      margin-top: var(--space-8);
    }
  }
  
</style>
