---
import { Icon } from 'astro-icon/components';

import NavLink from './NavLink.astro';
import ThemeToggle from './ThemeToggle.astro';

import siteConfig from '../data/site-config';

const navLinks = siteConfig.headerNavLinks || [];
---

<nav class="nav">
  {
    navLinks.length > 0 && (
      <div class="wrap">
        <button class="menu-toggle" aria-label="Open Menu" aria-expanded="false" aria-controls="menu-items">
          <Icon id="menuIcon" name="menu" class="menu__icon" width={32} height={32} />
        </button>
        <ul id="menu-items" class="menu">
          {navLinks.map((link) => (
            <li class="navitem">
              <NavLink class="navlink" href={link.href}>
                {link.text}
              </NavLink>
            </li>
          ))}
          <li>
            <div class="theme-toggle-wrapper">
              <ThemeToggle />
            </div>
          </li>
        </ul>
      </div>
    )
  }
</nav>

<style lang="scss">
  nav {
    .wrap {
      .menu-toggle {
        width: var(--size-40);
        height: var(--size-40);
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        z-index: 30;
        cursor: pointer;
        background-color: transparent;
        border: none;
        outline: none;

        @media (min-width: 1000px) {
          display: none;
        }

        &-icon {
          width: 1.5rem;
          height: 1px;
          position: relative;
          background-color: currentColor;
        }

        &.is-active .menu-toggle-icon {
          width: 0;
          transition: width 0.1 ease-in-out;
        }
      }

      .menu {
        display: flex;
        gap: var(--space-40);
        list-style: none;

        @media (max-width: 1000px) {
          flex-direction: column;
          gap: var(--space-32);
          position: absolute;
          top: 7rem;
          left: 0;
          right: 0;
          z-index: 2;
          background-color: var(--color-bg-base);
          visibility: hidden;
          opacity: 0;
          padding-bottom: var(--space-24);
          border-bottom: var(--size-1) solid var(--color-border-primary);
          transition:
            opacity 0.25s ease-in-out,
            visibility 0.25s ease-in-out;

          &.is-visible {
            visibility: visible;
            opacity: 1;
          }
        }

        .navitem {
          padding: 0.25rem 0;

          .navlink {
            font-size: var(--font-size-18);
            color: var(--color-main);
          }
        }
      }
    }
  }
</style>

<script is:inline>
  function menuToggle() {
    const menu = document.querySelector('.menu');
    const menuToggleBtn = document.querySelector('.menu-toggle');
    menuToggleBtn?.addEventListener('click', () => {
      const isMenuExpanded = menuToggleBtn.getAttribute('aria-expanded') === 'true';
      menuToggleBtn.classList.toggle('is-active');
      menuToggleBtn.setAttribute('aria-expanded', isMenuExpanded ? 'false' : 'true');
      menuToggleBtn.setAttribute('aria-label', isMenuExpanded ? 'Open Menu' : 'Close Menu');
      menu?.classList.toggle('is-visible');
    });
  }
  menuToggle();
  document.addEventListener('astro:after-swap', menuToggle);
</script>
