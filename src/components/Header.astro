---
import { getEntry } from "astro:content";
import { Icon } from "astro-icon/components";

import Logo from "./Logo.astro";
import Link from "./Link.astro";
import ThemeToggle from "./ThemeToggle.astro";

interface MenuLink {
  link: string;
  name: string;
}

const menu = await getEntry("nav", "menu");
---

<header>
  <nav aria-label="Main Navigation" role="navigation" class="nav">
    <!-- Brand -->
    <Logo />

    <!-- Nav Menu -->
    <div id="navmenu" class="navmenu">
      <!-- Nav Links -->
      <ul class="navlinks">
        {
          menu.data.links.map((menu: MenuLink) => (
            <li class="navitem">
              <Link
                href={menu.link}
                text={menu.name}
                title={menu.name}
                aria-label={menu.name}
                data-navLink
              />
            </li>
          ))
        }
        <li class="navitem">
          <ThemeToggle class="theme-toggle" id="themeToggle" />
        </li>
      </ul>
    </div>

    <!-- Hamburger menu -->
    <button
      aria-label="menu"
      role="button"
      aria-controls="navmenu"
      aria-expanded="false"
      id="menuButton"
      class="menu__button"
    >
      <Icon
        id="menuIcon"
        name="menu"
        class="menu__icon"
        width={32}
        height={32}
      />
      <Icon
        id="closeIcon"
        name="close"
        class="menu__icon"
        width={32}
        height={32}
        style="display: none;"
      />
    </button>
  </nav>
</header>

<style is:global lang="scss">
  nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin: 0 auto;
  }

  .navmenu {
    background: var(--color-bg-base);
    left: 0;
    right: 0;
    position: absolute;
    top: 100px;
    z-index: 2;
    overflow: hidden;
    transition: height 0.15s;
    height: 0;

    @media (min-width: 992px) {
      background: transparent;
      position: static;
      display: flex;
      align-items: center;
      justify-content: end;
      height: auto;
      padding: 0;
      border: none;
    }
  }

  .navlinks {
    display: flex;
    flex-direction: column;
    align-items: center;
    list-style: none;
    padding: var(--space-24);
    gap: var(--space-40);

    @media (min-width: 992px) {
      flex-direction: row;
    }
  }

  .navitem:last-child {
    font-size: 0;

    @media (max-width: 992px) {
      margin-bottom: var(--space-24);
    }
  }

  .menu__button {
    width: 48px;
    height: 48px;
    background: none;
    border: none;
    cursor: pointer;

    @media (min-width: 992px) {
      display: none;
    }
  }

  .menu__icon {
    width: 32px;
    height: 32px;
  }

  [data-icon] {
    color: var(--color-icon-primary);
  }
</style>

<script>
  function initMenuToggle() {
    const menuButton = document.getElementById("menuButton");
    const navMenu = document.getElementById("navmenu");
    const menuIcon = document.getElementById("menuIcon");
    const closeIcon = document.getElementById("closeIcon");

    let isMenuOpen = false;

    if (menuButton && navMenu && menuIcon && closeIcon) {
      menuButton.addEventListener("click", () => {
        /* Handle the height transition */
        isMenuOpen = !isMenuOpen;

        menuButton.setAttribute("aria-expanded", `${isMenuOpen}`);

        if (isMenuOpen) {
          navMenu.style.height = `${navMenu.scrollHeight}px`;
          menuIcon.style.display = "none";
          closeIcon.style.display = "block";
        } else {
          navMenu.style.height = "0px";
          menuIcon.style.display = "block";
          closeIcon.style.display = "none";
        }
      });

      navMenu.addEventListener("click", () => {
        /* Close menu after using it */
        if (isMenuOpen) {
          isMenuOpen = false;
          navMenu.style.height = "0px";
          navMenu.classList.remove("h-auto");
          menuIcon.style.display = "block";
          closeIcon.style.display = "none";
        }
      });

      window.addEventListener("resize", () => {
        /* Resize cleanup screen state */
        if (window.innerWidth >= 922) {
          /* Add height if menu was closed and then resize happened */
          navMenu.style.height = "auto";
          menuIcon.style.display = "block";
          closeIcon.style.display = "none";
        } else {
          /* Prevent opened menu when going from big to small */
          navMenu.style.height = "0px";
          menuIcon.style.display = "block";
          closeIcon.style.display = "none";
        }
      });
    }
  }

  document.addEventListener("DOMContentLoaded", initMenuToggle);
  document.addEventListener("astro:after-swap", initMenuToggle);
</script>
