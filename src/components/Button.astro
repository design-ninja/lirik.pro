---
import type { HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"a"> {
  color?: "primary" | "secondary";
  size?: "small" | "medium" | "large";
  isIcon?: boolean;
  href: string;
}

const {
  color = "primary",
  size = "medium",
  isIcon,
  href,
  ...rest
} = Astro.props as Props;
---

<a
  {...rest}
  href={href}
  aria-label="button"
  class:list={[
    "button",
    `button--${color}`,
    `button--${size}`,
    { "button--icon": isIcon },
  ]}
>
  <slot />
</a>

<style lang="scss">
  .button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-8);
    cursor: pointer;
    text-decoration: none;
    font-family: var(--font-family-body);
    font-size: var(--font-size-16);
    border-radius: var(--radius-round);
    transition: opacity 0.2s ease;

    &:hover {
      opacity: 0.9;
    }

    &--primary {
      background-color: var(--color-bg-action-primary);
      color: var(--color-text-on-action-primary);
    }

    &--secondary {
      background-color: var(--color-bg-action-secondary);
      color: var(--color-text-primary);
    }

    &--small {
      padding: var(--space-8) var(--space-16);
      font-size: var(--font-size-16);
    }

    &--medium {
      padding: var(--space-16) var(--space-32);

      &.button--icon {
        padding-left: var(--space-24);
      }
    }

    &--large {
      padding: var(--space-16) var(--space-40);
      font-size: var(--font-size-20);

      &.button--icon {
        padding-left: var(--space-32);
      }
    }

    &__icon {
      margin-right: var(--space-8);
      fill: var(--color-icon-tertiary);
    }
  }
</style>
