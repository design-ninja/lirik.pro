---
import type { GetStaticPathsOptions, Page } from 'astro';
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import Pagination from '../../../components/Blog/Pagination.astro';
import PostPreview from '../../../components/Blog/PostPreview.astro';
import siteConfig from '../../../data/site-config';
import { sortItemsByDateDesc, getAllTags, getPostsByTag } from '../../../utils/data-utils';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const posts = (await getCollection('blog')).sort(sortItemsByDateDesc);
  const tags = getAllTags(posts);

  return tags.flatMap((tag) => {
    const filteredPosts = getPostsByTag(posts, tag.slug);
    return paginate(filteredPosts, {
      params: { slug: tag.slug },
      pageSize: siteConfig.postsPerPage || 4
    });
  });
}

type Props = { page: Page<CollectionEntry<'blog'>> };

const { page } = Astro.props;
const blog = page.data;
const params = Astro.params;
const allPosts = await getCollection('blog');
const allTags = getAllTags(allPosts);
const currentTag = allTags.find((tag) => {
  return tag.slug === params.slug;
});
---

<BaseLayout
  title={`Посты с тэгом ${currentTag?.name}`}
  description={`Посты в блоге дизайнера Кирилла Исаченко с тэгом ${currentTag?.name}`}
  image={{ src: '/og-preview.jpg', alt: 'Дизайнер Кирилл Исаченко' }}
>
  <h1>Посты с тэгом "{currentTag?.name}"</h1>
  {blog.map((post) => <PostPreview post={post} />)}
  <Pagination page={page} />
</BaseLayout>
