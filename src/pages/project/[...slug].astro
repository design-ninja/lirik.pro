---
import { Image } from 'astro:assets';
import Layout from '../../layouts/Layout.astro';
import { getCollection } from "astro:content";
import type { CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const projectEntries = await getCollection("projects");

  return projectEntries.map((project) => ({
    params: { slug: project.slug },
    props: { project },
  }));
}

const { project } = Astro.props;
const { slug } = Astro.params;

if (!project) {
  throw new Error("Project is required");
}

const entry: CollectionEntry<"projects"> = project;

let previous: CollectionEntry<"projects"> | null = null;
let next: CollectionEntry<"projects"> | null = null;

const projects = await getCollection("projects");
const currentIndex = projects.findIndex(proj => proj.slug === slug);

if (currentIndex > 0) {
  previous = projects[currentIndex - 1];
}

if (currentIndex < projects.length - 1) {
  next = projects[currentIndex + 1];
}

const { Content } = await entry.render();
---

<Layout title={entry.data.title}>
  <article>
    <Image width="720" loading="eager" src={entry.data.image} alt={entry.data.title} />
    <h1 class="inner">{entry.data.title}</h1>
    <span class="tags">{entry.data.tags?.join(', ').replace(/,(?!.*,)/gmi, ' &')}</span>

    <Content />

    <nav>
      {previous ? (
        <a href={`/project/${previous.slug}`}>
          <span>
            <Image width={300} loading="eager" alt="" src={previous.data.image} />
          </span>
          <span>Previous Project</span>
        </a>
      ) : (
        <span />
      )}
      {next ? (
        <a href={`/project/${next.slug}`}>
          <span>
            <Image width={300} loading="eager" alt="" src={next.data.image} />
          </span>
          <span>Next Project</span>
        </a>
      ) : (
        <span />
      )}
    </nav>
  </article>
</Layout>

<style lang="scss">
  article {
    display: grid;
    gap: 2rem;
    margin: 0 auto;
    max-width: 900px;
    padding: 1rem;
  }

  .inner {
    font-size: 3rem;
    margin: 0;
    font-weight: 400;
    text-transform: inherit;
  }

  nav {
    display: grid;
    gap: 4rem;
    grid-template-columns: 1fr 1fr;
    margin-top: 2rem;
    text-decoration: none;
  }

  .tags {
    color: var(--color-text-secondary);
  }

  span {
    align-items: center;
    display: grid;
    gap: 1rem;
    grid-auto-flow: column;
  }

  img {
    border-radius: 1rem;
    height: auto;
    width: 100%;
  }
</style>