---
import BaseHead, { type Props as HeadProps } from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import Avatar from '../components/Avatar.astro';
import { ClientRouter } from 'astro:transitions';
import { getSiteLocaleConfig } from '../data/site-config';
import { getHtmlLang, getLocalizedPath, type Locale } from '../utils/i18n';

interface LayoutProps extends HeadProps {
  locale: Locale;
}

const { locale, ...head } = Astro.props as LayoutProps;
const site = getSiteLocaleConfig(locale);
const homePath = getLocalizedPath('/', locale);
const normalizedPathname = Astro.url.pathname.endsWith('/') ? Astro.url.pathname : `${Astro.url.pathname}/`;
const isHome = normalizedPathname === homePath;
const brandHref = getLocalizedPath('/', locale);
const canonicalHref = new URL(Astro.request.url, Astro.site).toString();
---

<!doctype html>
<html lang={getHtmlLang(locale)}>
  <head>
    <BaseHead locale={locale} canonicalHref={canonicalHref} {...head} />
  </head>
  <body>
    <main transition:animate="fade">
      {!isHome && (
        <a href={brandHref} class="BrandLink" aria-label={site.author}>
          <Avatar size="small" loading="eager" />
          <span class="BrandLink__Name">{site.author}</span>
        </a>
      )}
      <slot />
      <Footer locale={locale} />
    </main>
    <style lang="scss">
      .BrandLink {
        display: inline-flex;
        align-items: center;
        gap: var(--space-12);
        color: var(--color-text-primary);
        text-decoration: none;
        margin-top: var(--space-24);
        margin-bottom: var(--space-40);
      }

      .BrandLink__Name {
        font-weight: var(--font-weight-medium);
      }
    </style>
    <ClientRouter />
  </body>
</html>
